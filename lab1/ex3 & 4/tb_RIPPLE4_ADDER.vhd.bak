library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity tb_ripple4_adder is
end entity;

architecture behavior of tb_ripple4_adder is

    -- Signals to connect to UUT (unit under test)
    signal A, B : std_logic_vector(3 downto 0);
    signal Cin  : std_logic;
    signal Sum  : std_logic_vector(3 downto 0);
    signal Cout : std_logic;

    component RIPPLE4_ADDER
        port (
            A, B : in std_logic_vector(3 downto 0);
            Cin  : in std_logic;
            Sum  : out std_logic_vector(3 downto 0);
            Cout : out std_logic
        );
    end component;

begin

    -- Instantiate the Unit Under Test (UUT)
    UUT: RIPPLE4_ADDER
        port map (
            A => A,
            B => B,
            Cin => Cin,
            Sum => Sum,
            Cout => Cout
        );

    -- Test process
    stim_proc: process
    begin
        -- Test case 1: 0001 + 0010 + 0 = 0011
        A <= "0001"; B <= "0010"; Cin <= '0';
        wait for 10 ns;

        -- Test case 2: 0101 + 0101 + 0 = 1010
        A <= "0101"; B <= "0101"; Cin <= '0';
        wait for 10 ns;

        -- Test case 3: 1111 + 0001 + 0 = 0000 with Cout = 1
        A <= "1111"; B <= "0001"; Cin <= '0';
        wait for 10 ns;

        -- Test case 4: 1010 + 0101 + 1 = 1111
        A <= "1010"; B <= "0101"; Cin <= '1';
        wait for 10 ns;

        -- Finish
        wait;
    end process;

end architecture;

